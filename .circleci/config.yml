version: 2.1
orbs:
  aws-cli: circleci/aws-cli@3.1
jobs:
  build-and-publish-image:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application
          command: |
            echo "put code to build application here"
      - run:
          name: Publish Image
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker build -t file-management:latest .
            docker tag file-management:latest tuandanghtt1996/file-management-system:latest
            docker push tuandanghtt1996/file-management-system:latest
  provision-infra:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    environment:
      AWS_REGION: "ap-southeast-1"
    steps:
      - checkout
      - aws-cli/setup:
          role-arn: "arn:aws:iam::527552148303:role/circleci-role"
          role-session-name: "example-session"
          session-duration: "1800"
      - run:
          name: Provision infra
          command: |
            cd ./infra
            terraform init -get=true -input=false -reconfigure -backend-config="bucket=test-terraform-state-527552148303" -backend-config="key=terraform.tfstate" -backend-config="region=ap-southeast-1"
            terraform plan -out tfapply
            terraform apply tfapply
            public_ip=$(terraform output public_ip)
            echo [remote]$'\n'$public_ip > ../ansible/hosts
      - persist_to_workspace:
          root: .
          paths:
            - ansible/hosts
  deploy-application:
    docker:
      - image: python:3.11.4-alpine3.18
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Add ssh key
          command: |
            content=$(echo $SSH_KEY | tr ' ' '\n')
            echo "-----BEGIN OPENSSH PRIVATE KEY-----\n$content\n-----END OPENSSH PRIVATE KEY-----\n" > ./ansible/ec2
            chmod 0600 ./ansible/ec2
            chmod 0600 ./ansible/hosts
            
            cat ./ansible/hosts
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
            ansible --version
      - run:
          name: Deploy application
          command: |
            cd ./ansible
            ansible-playbook -i hosts docker.yml
            ansible-playbook -i hosts mounting_ebs.yml
            ansible-playbook -i hosts deploy.yml
workflows:
  deploy-workflow:
    jobs:
#      - build-and-publish-image
      - provision-infra
      - deploy-application:
          requires:
            - provision-infra
